SDL_find_package(apr-util)

if(TARGET apr-util::apr-util)
  set(apr-util_FOUND ON)
  return()
endif()

set(FORCE_APR_BUILD ON PARENT_SCOPE)

set(APR_UTIL_SOURCE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/apr-util-1.5.3)
set(APR_UTIL_BUILD_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/apr-util-build)
set(APR_UTIL_INCLUDE_DIRECTORY ${APR_UTIL_SOURCE_DIRECTORY}/include)
set(APR_UTIL_LIBS_DIRECTORY ${APR_UTIL_BUILD_DIRECTORY}/.libs)

file(MAKE_DIRECTORY
  ${APR_UTIL_BUILD_DIRECTORY}
)

set(EXPAT_SOURCE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../expat-2.1.0)
set(EXPAT_BUILD_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../expat-2.1.0)

include("./${PLATFORM}.cmake")

add_library(apr-util::apr-util UNKNOWN IMPORTED GLOBAL)
set_target_properties(apr-util::apr-util
  PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${APR_UTIL_INCLUDE_DIRECTORY}"
    IMPORTED_LOCATION "${APR_UTIL_LIBS_DIRECTORY}/libaprutil-1.so"
)

set(apr-util_FOUND ON)

install(
    DIRECTORY ${APR_UTIL_LIBS_DIRECTORY}/
    DESTINATION ${3RD_PARTY_INSTALL_PREFIX_ARCH}/lib
    USE_SOURCE_PERMISSIONS
    FILES_MATCHING PATTERN libaprutil-1.so*
  )

  install(
    DIRECTORY ${APR_UTIL_INCLUDE_DIRECTORY}
    DESTINATION ${3RD_PARTY_INSTALL_PREFIX}
    USE_SOURCE_PERMISSIONS
    FILES_MATCHING PATTERN *.h
  )