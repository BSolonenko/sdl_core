SDL_find_package(log4cxx)

if(TARGET log4cxx::log4cxx)
  set(log4cxx_FOUND ON)
  return()
endif()

set(LOG4CXX_SOURCE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../apache-log4cxx-0.10.0)
set(LOG4CXX_BUILD_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/../apache-log4cxx-build)

set(LOG4CXX_SOURCE_INCLUDE_DIRECTORY ${LOG4CXX_SOURCE_DIRECTORY}/src/main/include)
set(LOG4CXX_BUILD_INCLUDE_DIRECTORY ${LOG4CXX_BUILD_DIRECTORY}/src/main/include)

set(LOG4CXX_LIBS_DIRECTORY ${LOG4CXX_BUILD_DIRECTORY}/src/main/cpp/.libs)

file(MAKE_DIRECTORY
  ${LOG4CXX_BUILD_DIRECTORY}
)

include("./${PLATFORM}.cmake")

add_library(log4cxx::log4cxx UNKNOWN IMPORTED GLOBAL)
set_target_properties(log4cxx::log4cxx
  PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${LOG4CXX_SOURCE_INCLUDE_DIRECTORY}"
    IMPORTED_LOCATION "${LOG4CXX_LIBS_DIRECTORY}/liblog4cxx.so"
)

set(log4cxx_FOUND ON)

install(
  DIRECTORY ${LOG4CXX_LIBS_DIRECTORY}/
  DESTINATION ${3RD_PARTY_INSTALL_PREFIX_ARCH}/lib
  USE_SOURCE_PERMISSIONS
  FILES_MATCHING PATTERN liblog4cxx.so*
)

install(
  DIRECTORY ${LOG4CXX_SOURCE_INCLUDE_DIRECTORY}/
  DESTINATION ${3RD_PARTY_INSTALL_PREFIX}/include
  USE_SOURCE_PERMISSIONS
  FILES_MATCHING PATTERN *.h
)

install(
  DIRECTORY ${LOG4CXX_BUILD_INCLUDE_DIRECTORY}/
  DESTINATION ${3RD_PARTY_INSTALL_PREFIX}/include
  USE_SOURCE_PERMISSIONS
  FILES_MATCHING PATTERN *.h
)
